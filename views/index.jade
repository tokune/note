extends layout

block body
  .box(ng-view) 

block script
  script(src='/js/main.js')
  script.
    var app = angular.module('TNote', ['ngRoute']);
    
    app.controller('TitleController', function ($scope, noteService) {
      $('.left-nav').on('dragstart', 'li', function(e) {
          var overlay_el = $('.overlay')[0];
          overlay_el.style.display = 'inline';
          e.originalEvent.dataTransfer.setData("note_id", e.target.getAttribute('data-id'));
      });
      $('body').on('dragover', function(e) {
          e.preventDefault();
      });
      $('body').on('drop', function() {
          $('.overlay').css('display', 'none');
      });
      $('.dialog-box').on('drop', '.dropbox', function(e) {
          var note_id = e.originalEvent.dataTransfer.getData("note_id");
          if(!note_id) {
            alert('Note ID not found');
            return $('.overlay').css('display', 'none');
          }
          noteService.deleteNote(note_id).then(
            function(data) {
              var message = data.err ? data.err : 'Deleted Note ' + note_id;
              if(!data.err) $('a[href|="#/note/' + note_id + '"]').remove();
              if(!data.err && window.location.hash.indexOf('#/note/' + note_id) === 0) window.location.href = '#/';
              alert(message);
            },
            function() {
              alert('failed');
            }
          );
      });
    });

    app.controller('NoteController', function ($scope, $routeParams, noteService) {
      var note_id = ($routeParams.noteID) ? parseInt($routeParams.noteID) : 0;
      var note = {title:'', content:''};
      var Title = function() {
        this.value = note.title;
      };
      Title.prototype = {  
        get value() {  
          return this._value;  
        },
        set value(val) {  
          noteService.setTitle(val);
          this._value = val;  
        }
      };
      $scope.current_title = new Title();
      if(note_id) {
        noteService.getNote(note_id).then(
          function(data) {
            note = data;
            var html = data && data.content ? data.content : '';
            $scope.current_title = new Title();
            $('.note').html(html);
          }
        );
      }
      $scope.submit = function(){
        noteService.saveNote(note_id, $scope.current_title.value);
      };
    });
    app.config(function($routeProvider) {
      $routeProvider
        .when('/', {   
          templateUrl: '/about'
        })  
        .when('/note/:noteID', {   
          controller: 'NoteController',
          templateUrl: '/note'
        })  
        .otherwise({ redirectTo: '/' })
    });
    app.service('noteService', function ($http, $q) {
      var title = '';
      this.setTitle = function(val){
        title = val;
        var target = $('li[current|=\'true\']');
        if (target && target[0]) target[0].innerText = title;
        return title;
      };
      this.getTitle = function(){
        return title;
      };
      this.saveNote = function(note_id, title){
        var content = $('.note') && $('.note').length > 0 ? $('.note')[0].innerHTML : '';
        var url = '/note/';
        url = note_id ? url + note_id : url;
        $http.post(url, {title: title, content: content})
          .success(function(data){
            if(data.err) return alert('error');
            if(url === '/note/') {
              var target = $('li[current|=\'true\']');
              if (target && target.parent() && target.parent()[0]) {
                target.parent()[0].href = data && data.note.id ? '#/note/' + data.note.id : '#/note/0';
                target[0].setAttribute('data-id', data.note.id);
                window.location.href = '#/note/' + data.note.id;
              }
            }
            alert('saved');
          })
          .error(function(){
            alert('error');
          });
      };
      this.getNote = function(note_id){
        var deferred = $q.defer();
        var url = '/note/' + note_id;
        $http.get(url)
          .success(function(data){
            if(data.err) deferred.reject();
            else deferred.resolve(data);
          })
          .error(function(){
            deferred.reject(); 
          });
        return deferred.promise;
      };
      this.deleteNote = function(note_id){
        var deferred = $q.defer();
        var url = '/note/' + note_id + '/delete';
        $http.post(url)
          .success(function(data){
            if(data.err) deferred.reject();
            else deferred.resolve(data);
          })
          .error(function(){
            deferred.reject(); 
          });
        return deferred.promise;
      };
    });
